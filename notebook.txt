#hello22
import cv2
#test

src = cv2.imread(r"C:\Users\LIGS\Desktop\1.jpg", cv2.IMREAD_COLOR)

gray = cv2.cvtColor(src, cv2.COLOR_RGB2GRAY)
ret, dst = cv2.threshold(gray, 205, 255, 1)

cv2.imshow("dst", dst)
cv2.waitKey(0)
cv2.destroyAllWindows()




def resize(file):
    img = Image.open(file)
    new_height = 1280
    new_width  = int(new_height * img.width / img.height)
    print(file)
    resized_img = img.resize((new_width, new_height), Image.ANTIALIAS)
    resized_img.save(file)







#알 1, 3, 6, 55, 66
import pytesseract
from PIL import Image 
import pytesseract 
import argparse 
import cv2 
import os 
import matplotlib.pyplot as plt

path = r"C:\Users\LIGS\Desktop\image\1.jpg"

resize(path)

src = cv2.imread(path, cv2.IMREAD_COLOR)
gray = cv2.cvtColor(src, cv2.COLOR_RGB2GRAY)
ret, dst = cv2.threshold(gray, 202, 255, 1)

#roi = im[y1:y2, x1:x2]
#filename = "{}.jpg".format(os.getpid()) 
#cv2.imwrite(filename, dst) 

dst1 = dst[84:160, 146:511]
dst2 = dst[270:311, 238:391]

# erode 적용
tick= 2
kernel = np.ones((tick, tick), np.uint8)
dst1 = cv2.erode(dst1, kernel, iterations=3)  
    
plt.imshow(dst1)
plt.show()
plt.imshow(dst2)
plt.show()

pytesseract.pytesseract.tesseract_cmd = r'C:/Program Files/Tesseract-OCR/tesseract'
tessdata_dir_config = r'--tessdata-dir "C:\Program Files\Tesseract-OCR\tessdata"'
print('place:', pytesseract.image_to_string(dst1, config='--oem 3 --psm 3', lang='kor+eng'))
print('time:', pytesseract.image_to_string(dst2, config='--oem 3 --psm 6 -c tessedit_char_whitelist=:0123456789'))












#몬스터   4  33  44
import pytesseract
from PIL import Image 
import pytesseract, argparse, cv2, os

src = cv2.imread(r"C:\Users\LIGS\Desktop\image\44.jpg", cv2.IMREAD_COLOR)
gray = cv2.cvtColor(src, cv2.COLOR_RGB2GRAY)
ret, dst = cv2.threshold(gray, 207, 255, 1)

#roi = im[y1:y2, x1:x2]
#filename = "{}.jpg".format(os.getpid()) 
#cv2.imwrite(filename, dst) 

dst1 = dst[84:163, 146:511]
dst2 = dst[213:400, 128:474]
dst3 = dst[697:743, 474:576]

# edge 적용
#dst2 = cv2.Canny(dst2, 82,426)

# erode 적용
tick= 2
kernel = np.ones((tick, tick), np.uint8)
dst1 = cv2.erode(dst1, kernel, iterations=1)  

plt.imshow(dst1)
plt.show()
plt.imshow(dst2)
plt.show()
plt.imshow(dst3)
plt.show()

pytesseract.pytesseract.tesseract_cmd = r'C:/Program Files/Tesseract-OCR/tesseract'
custom_oem_psm_config = r'--oem 3 --psm 12'
tessdata_dir_config = r'--tessdata-dir "C:\Program Files\Tesseract-OCR\tessdata"'
print('place:', pytesseract.image_to_string(dst1, config=custom_oem_psm_config, lang='kor+eng'))
print('name:', pytesseract.image_to_string(dst2, config='--oem 3 --psm 6', lang='kor+eng'))
print('time:', pytesseract.image_to_string(dst3, config='--oem 3 --psm 6 -c tessedit_char_whitelist=:0123456789', lang='kor'))#몬스터   4  33  44
import pytesseract
from PIL import Image 
import pytesseract, argparse, cv2, os

src = cv2.imread(r"C:\Users\LIGS\Desktop\image\44.jpg", cv2.IMREAD_COLOR)
gray = cv2.cvtColor(src, cv2.COLOR_RGB2GRAY)
ret, dst = cv2.threshold(gray, 207, 255, 1)

#roi = im[y1:y2, x1:x2]
#filename = "{}.jpg".format(os.getpid()) 
#cv2.imwrite(filename, dst) 

dst1 = dst[84:163, 146:511]
dst2 = dst[213:400, 128:474]
dst3 = dst[697:743, 474:576]

# edge 적용
#dst2 = cv2.Canny(dst2, 82,426)

# erode 적용
tick= 2
kernel = np.ones((tick, tick), np.uint8)
dst1 = cv2.erode(dst1, kernel, iterations=1)  

plt.imshow(dst1)
plt.show()
plt.imshow(dst2)
plt.show()
plt.imshow(dst3)
plt.show()

pytesseract.pytesseract.tesseract_cmd = r'C:/Program Files/Tesseract-OCR/tesseract'
custom_oem_psm_config = r'--oem 3 --psm 12'
tessdata_dir_config = r'--tessdata-dir "C:\Program Files\Tesseract-OCR\tessdata"'
print('place:', pytesseract.image_to_string(dst1, config=custom_oem_psm_config, lang='kor+eng'))
print('name:', pytesseract.image_to_string(dst2, config='--oem 3 --psm 6', lang='kor+eng'))
print('time:', pytesseract.image_to_string(dst3, config='--oem 3 --psm 6 -c tessedit_char_whitelist=:0123456789', lang='kor'))

